--- a/ldso/ldso/dl-elf.c
+++ b/ldso/ldso/dl-elf.c
@@ -336,7 +336,7 @@ struct elf_resolve *_dl_load_shared_library(unsigned int rflags, struct dyn_elf
 	   This list must exactly match the list in uClibc/ldso/util/ldd.c */
 	_dl_if_debug_dprint("\tsearching full lib path list\n");
 	tpnt1 = search_for_named_library(libname, rflags,
-					UCLIBC_RUNTIME_PREFIX "usr/lib"
+					UCLIBC_RUNTIME_PREFIX "usr/lib32"
 					, rpnt, NULL);
 	if (tpnt1 != NULL)
 		return tpnt1;
--- a/utils/ldconfig.c
+++ b/utils/ldconfig.c
@@ -951,7 +951,7 @@ int main(int argc, char **argv)

 		/* look ma, no defaults */
 		if (!nodefault) {
-			scan_dir(UCLIBC_RUNTIME_PREFIX "usr/lib");
+			scan_dir(UCLIBC_RUNTIME_PREFIX "usr/lib32");
 #ifdef __LDSO_CACHE_SUPPORT__
 			/* I guess the defaults aren't good enough */
 			if ((extpath = get_extpath())) {
@@ -962,7 +962,7 @@ int main(int argc, char **argv)
 						while (cp[--len] == '/' && len)
 							cp[len] = 0;
 					/* we do the redundancy check only if cache usage is enabled */
-					if (strcmp(UCLIBC_RUNTIME_PREFIX "usr/lib", cp) == 0) {
+					if (strcmp(UCLIBC_RUNTIME_PREFIX "usr/lib32", cp) == 0) {
 						if (verbose >= 0)
 							warnx("You should remove `%s' from `%s'", cp, LDSO_CONF);
 						continue;
--- a/utils/ldd.c
+++ b/utils/ldd.c
@@ -504,7 +504,7 @@ static void locate_library_file(ElfW(Ehdr) *ehdr, ElfW(Dyn) *dynamic,

 	/* Lastly, search the standard list of paths for the library.
 	   This list must exactly match the list in uClibc/ldso/ldso/dl-elf.c */
-	path = UCLIBC_RUNTIME_PREFIX "usr/lib"
+	path = UCLIBC_RUNTIME_PREFIX "usr/lib32"
 	    ;
 	search_for_named_library(lib->name, buf, path);
 	if (*buf != '\0') {
